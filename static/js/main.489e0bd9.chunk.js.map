{"version":3,"sources":["api/products.api.js","components/Products.js","App.js","serviceWorker.js","index.js"],"names":["getProducts","price","category","a","api_url","Axios","get","headers","Authorization","reqApi","products","data","rows","minPrice","split","maxPrice","filter","val","sell_price","parseInt","useStyles","createUseStyles","header","background","color","marginBottom","inputHeader","height","borderRadius","outline","width","paddingLeft","buttonHeader","bottom","fontSize","fontWeight","Products","classes","useState","setcategory","setPrice","setProducts","useEffect","then","res","className","style","src","type","placeholder","alt","margin","position","onChange","target","value","map","i","key","SpreeStore","store_name","name","display","unit_measure","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.489e0bd9.chunk.js","sourcesContent":["import Axios from 'axios'\n\nexport const getProducts = async (price, category) => {\n    try {\n        let api_url = \"https://apis.aspenku.com/api/v1/product?\"\n        if(category) {\n            api_url += `subCategory=${category}`\n        }\n        let reqApi = await Axios.get(api_url, {\n            headers: {\n                Authorization: \"Basic QXNwZW5rdTpBc3Blbmt1?\"\n            }\n        })\n        let products = reqApi.data.data.rows\n        if (price) {\n            let minPrice = price.split('-')[0]\n            let maxPrice = price.split('-')[1]\n        \n            products = products.filter(val => {\n                let sell_price = parseInt((val.sell_price).split('.')[0])\n                return minPrice <= sell_price && sell_price <= maxPrice\n            })\n        }\n        \n        return products\n    } catch (error) {\n        return []\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { createUseStyles } from 'react-jss'\nimport { getProducts } from '../api/products.api';\n\nconst useStyles = createUseStyles({\n    header: {\n        background: \"#233750\",\n        color: \"white\",\n        marginBottom: \"50px\"\n    },\n    inputHeader: {\n        height: \"50%\",\n        borderRadius: \"20px\",\n        outline: \"none\",\n        width: \"465px\",\n        paddingLeft: \"10px\"\n    },\n    buttonHeader: {\n        background: \"#FF6600\",\n        color: \"white\",\n        height: \"42%\",\n        bottom: \"0%\",\n        borderRadius: '18px',\n        fontSize: \"16px\",\n        fontWeight: \"bold\",\n        '&:hover': {\n            color: \"white\"\n        }\n    }\n})\n\nconst Products = () => {\n    const classes = useStyles()\n    const [category, setcategory] = useState(null)\n    const [price, setPrice] = useState(null)\n    const [products, setProducts] = useState([])\n\n    useEffect(() => {\n        getProducts(price, category)\n            .then(res => setProducts(res))\n    }, [category, price])\n\n    const header = () => (\n        <div className={`${classes.header}`}>\n            <div className={`container d-flex justify-content-between`} style={{ height: \"100px\" }}>\n                <div className={`d-flex align-items-center`} >\n                    <img src=\"./img/logo-header.svg\" />\n                    <input type=\"text\" className={`${classes.inputHeader} d-none d-lg-block`} placeholder=\"what are you looking for?\" />\n                </div>\n                <div className={`d-flex align-items-center`} >\n                    <img src=\"./img/bell.svg\" alt=\"\" className=\"mr-3\" />\n                    <img src=\"./img/cart.svg\" alt=\"\" />\n                    <div style={{ width: \"1px\", background: \"white\", height: \"42%\", margin: \"0 20px\" }} className={`d-none d-sm-block`}></div>\n                    <button className={`btn ${classes.buttonHeader} d-none d-sm-block`} style={{ position: \"relative\" }}>Login / Register</button>\n                    <i className=\"fas fa-user d-block d-sm-none ml-3\"></i>\n                </div>\n            </div>\n            <div style={{ height: \"1px\", background: \"black\", width: \"100%\" }}></div>\n            <div className={`d-block d-lg-none container`} style={{ height: \"60px\" }} >\n                <input type=\"text\" className={`${classes.inputHeader} mt-1`} placeholder=\"what are you looking for?\" style={{ width: \"100%\", height: \"50px\" }} />\n            </div>\n            <div className={`container d-flex justify-content-between align-items-center`} style={{ height: \"50px\" }} >\n                <select className=\"custom-select\" style={{ width: \"150px\", height: \"80%\" }} onChange={({ target }) => setcategory(target.value == \"def\" ? null : target.value)}>\n                    <option value=\"def\">category</option>\n                    <option value={113}>Spices</option>\n                    <option value={119}>Seafood</option>\n                    <option value={140}>Coffee Beans</option>\n                    <option value={141}>Fruits</option>\n                    <option value={143}>Vegetables</option>\n                    <option value={144}>Tea</option>\n                </select>\n                <select className=\"custom-select\" style={{ width: \"150px\", height: \"80%\" }} onChange={({ target }) => setPrice(target.value == \"def\" ? null : target.value)}>\n                    <option value=\"def\">price range</option>\n                    <option>0-50</option>\n                    <option>50-100</option>\n                </select>\n            </div>\n        </div>\n    )\n\n    const listProduct = () => {\n        return (\n            <div className={`container`}>\n                <div className={`row`}>\n                    {products.map((val, i) => (\n                        <div className={`col-xl-4 col-md-4 col-md-6 col-sm-12 mb-5 d-flex flex-row justify-content-center`} key={i}>\n                            <div className=\"card\" style={{ width: \"80%\" }}>\n                                <img className=\"card-img-top\" src=\"./img/produk.jpg\" alt=\"Card image cap\" height=\"286\" />\n                                <div className=\"card-body\">\n                                    <p style={{ color: \"#939393\", margin: 0 }}>{val.SpreeStore.store_name}</p>\n                                    <h5 className=\"card-title\" >{val.name}</h5>\n                                    <p className=\"card-text\" style={{ display: \"inline\", color: \"orange\", fontSize: \"20px\" }}>${val.sell_price}</p>\n                                    <p className=\"card-text\" style={{ display: \"inline\", color: \"#939393\" }}> /{val.unit_measure}</p>\n                                    <a href=\"#\" className=\"btn btn-primary d-block\">Detail</a>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            {header()}\n            {listProduct()}\n        </>\n    )\n}\n\nexport default Products;","import React from 'react';\nimport Products from './components/Products';\n\nfunction App() {\n  return (\n    <Products />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}